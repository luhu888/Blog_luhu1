# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-09-26 12:37
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': '该用户名已被注册'}, help_text='用户名仅可包含字母、数字、-、_，但不可为纯数字。', max_length=150, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_username', message='用户名仅可包含字母、数字、-、_，但不可为纯数字。', regex='^(?![0-9]*$)[-_\\w]*$')], verbose_name='用户名')),
                ('portrait', models.ImageField(blank=True, null=True, upload_to=user.models.user_portrait_path, verbose_name='头像')),
                ('gender', models.IntegerField(blank=True, choices=[(0, '女'), (1, '男'), (2, '保密')], default=2, verbose_name='性别')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='姓名')),
                ('email', models.EmailField(blank=True, error_messages={'unique': '具有该电子邮件的用户已存在'}, max_length=255, null=True, unique=True, verbose_name='电子邮件')),
                ('email_active', models.BooleanField(default=False, verbose_name='电子邮箱激活')),
                ('tel', models.CharField(blank=True, error_messages={'unique': '具有该手机号码的用户已存在'}, max_length=20, null=True, unique=True, verbose_name='手机号码')),
                ('qq', models.CharField(blank=True, max_length=20, null=True, verbose_name='QQ')),
                ('we_chat', models.CharField(blank=True, max_length=40, null=True, verbose_name='微信')),
                ('contact_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='联系地址')),
                ('introduction', models.TextField(blank=True, max_length=200, null=True, verbose_name='简介')),
                ('is_staff', models.BooleanField(default=False, verbose_name='职员状态')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('date_joined', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='账号创建日期')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'permissions': (('view_cnzz', '查看站点流量'),),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmailVerify',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.IntegerField(choices=[(0, '账户激活'), (1, '找回密码')], default=0, verbose_name='类型')),
                ('verify_code', models.CharField(max_length=254, null=True, verbose_name='验证码')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name_plural': '邮箱验证码',
                'verbose_name': '邮箱验证码',
            },
        ),
    ]
